---
- name: F5 BIG-IPS 
  hosts: lbv3
  gather_facts: False

  vars_prompt:

    - name: ansible_host
      prompt: Enter BIGIP hostname or IP
      private: no

    - name: ansible_user
      prompt: Enter BIGIP username
      private: no

    - name: ansible_ssh_pass
      prompt: Enter BIGIP password
      unsafe: yes
      private: yes

  vars:
    cancelprecheck: false #F5 precheck 

    provider:
      password: "{{ ansible_ssh_pass }}"
      server: "{{ ansible_host }}"
      user: "{{ ansible_user }}"
      validate_certs: False
  
  tasks:

    - name: Pre-Check Get failover state    
      shell: tmsh show sys failover | awk '{print $2}'s
      register: failover_state
    # - debug:
    #     var: failover_state.stdout
    
    - block:

      - name: Get current time on BIG-IP  
        command: date "+%H%M%S-%m%d%y"
        delegate_to: localhost
        register: date
      # - debug:
      #     var: date.stdout

      - name: Pre-check f5 health 
        ansible.builtin.script: files/f5-check.sh {{ansible_host}} {{ansible_user}} {{ansible_ssh_pass}}
        delegate_to: localhost
        register: f5_check
      - debug:
          var: f5_check.stdout_lines
      - local_action:
          module: copy
          content: "{{ f5_check.stdout_lines }}"
          dest: "outputs/pre-{{ansible_host}}-f5_health-{{date.stdout}}"

      - name:
        pause:
          prompt: Please review the F5 health checks and Press return to continue. Press Ctrl+c and then "a" to abort

      - name: Verify running configuration of the BIG-IP
        command: tmsh load sys config verify partitions all
        register: verify_config
      # - debug:
      #     var: verify_config.stdout    

      - name: Fetch BIGIP Backup
        bigip_ucs_fetch:
          src: "{{ inventory_hostname + '-' + date.stdout +  '-backup.ucs' }}"
          dest: "{{ 'files/' + inventory_hostname + '-' + date.stdout +  '-backup.ucs' }}"
          provider: "{{ provider }}"
        delegate_to: localhost

      - name: Fetch BIGIP qkview
        bigip_qkview:
          exclude:
            - secure
          dest: "{{ 'files/' + inventory_hostname + '-' + date.stdout + '.qkview' }}"
          provider: "{{ provider }}"
        delegate_to: localhost

      - name: Pre-check Grab the Virtual Server Status  
        bigip_device_facts:
          gather_subset:
          - virtual-servers
          partition: "{{ item }}"
          provider: "{{provider}}"
        delegate_to: localhost
        register: bigip_facts              
        loop: "{{ partition_list }}"            

      - name: Pre-check Capture the Virtual Server stats in a .json file
        delegate_to: localhost
        set_fact:
          result: "{{bigip_facts | json_query(query_string)}}"
        vars:
          query_string: "results[].virtual_servers[].{Name: name, Status: availability_status,Full_Path: full_path,Destination: destination_address,Destination_Port: destination_port, Protocol: protocol,Pool: default_pool,Persistance: persistence_profile, Status_Reason: status_reason }"
      - local_action:
          module: copy
          content: "{{ result }}"
          dest: "outputs/pre-{{ansible_host}}-virtual-servers-outputs-{{date.stdout}}.json"

      - name: Pre-check Generate F5 Virtual Server Status .html Page
        template:
          src: ./report/templates/report.j2
          dest: ./report/pre-check-f5.html
        run_once: true
        delegate_to: localhost

      - name:
        pause:
          prompt: Please review pre-check-f5.html and Press return to continue. Press Ctrl+c and then "a" to abort

      # - name: Reactivate BIG-IP with existing reg key
      #   shell: SOAPLicenseClient --basekey $(perl -ane 'print $F[3] if /^Registration Key/' /config/bigip.license)

      # - name: Wait for configuration to finish loading
      #   wait_for:
      #     timeout: 45
      #   delegate_to: localhost

      - name: Upload image to the BIG-IP
        command: "rsync --progress --verbose f5teg@po-repo-f5.poinfra.server.lan::f5images/{{image}} /shared/images/"

      - name: Upload image-checksum to the BIG-IP
        command: "rsync --progress --verbose f5teg@po-repo-f5.poinfra.server.lan::f5images/{{image}}.md5 /shared/images/"

      - name: Verify image checksum
        ansible.builtin.command: "md5sum --check {{image}}.md5"
        args:
          chdir: /shared/images
        register: image_checksum
      - debug:
          var: image_checksum.stdout

      - name: Get available volume number to use
        script: files/get_vol_number.bash
        register: vol
      - debug:
          var: vol.stdout

      - name:
        pause:
          prompt: Next step is to install and reload the BIGIP. Press return to continue. Press Ctrl+c and then "a" to abort

      - name: Install BIG-IP software
        bigip_software_install:
          image: "{{ image }}"
          state: activated
          volume: "{{ vol.stdout }}"
          provider: "{{ provider }}"
        delegate_to: localhost
         # async: 45
         # poll: 0

      - name: Post-Check Grab the Virtual Server Status
        bigip_device_facts:
          gather_subset:
          - virtual-servers
          partition: "{{ item }}"
          provider: "{{provider}}"
        delegate_to: localhost  
        register: bigip_facts_post             
        loop: "{{ partition_list }}"            

      - name: Post-Check Capture the Virtual Server stats in a .json file
        delegate_to: localhost
        set_fact:
          resultpost: "{{bigip_facts_post | json_query(query_string) }}"
        vars:
          query_string: "results[].virtual_servers[].{Name: name, Status: availability_status,Full_Path: full_path,Destination: destination_address,Destination_Port: destination_port, Protocol: protocol,Pool: default_pool,Persistance: persistence_profile, Status_Reason: status_reason }"
      - local_action:
          module: copy
          content: "{{ resultpost }}"
          dest: "outputs/post-{{ansible_host}}-virtual-servers-outputs-{{date.stdout}}.json"

      - name: Post-Check Generate F5 Virtual Server Status .html Page
        template:
          src: ./report/templates/postreport.j2
          dest: ./report/post-check-f5.html
        delegate_to: localhost
        run_once: true

      - name: Post-Check f5 health 
        ansible.builtin.script: files/f5-check.sh {{ansible_host}} {{ansible_user}} {{ansible_ssh_pass}}
        delegate_to: localhost
        register: f5_postcheck
      - debug:
          var: f5_postcheck.stdout_lines
      - local_action:
          module: copy
          content: "{{ f5_postcheck.stdout_lines }}"
          dest: "outputs/post-{{ansible_host}}-f5_health-{{date.stdout}}"

      when: failover_state.stdout  == 'standby'

